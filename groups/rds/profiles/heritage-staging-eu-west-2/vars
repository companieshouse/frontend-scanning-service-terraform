# Account details
aws_profile = "heritage-staging-eu-west-2"
aws_region  = "eu-west-2"
aws_account = "heritage-staging"

# Account shorthand
account     = "hstg"
region      = "euw2"
environment = "staging"

# RDS settings
rds_databases = {
  abbyy = {
    instance_class             = "db.m5.large"
    allocated_storage          = 25
    backup_retention_period    = 2
    multi_az                   = false
    engine                     = "oracle-se2"
    major_engine_version       = "19"
    engine_version             = "19"
    auto_minor_version_upgrade = true
    license_model              = "license-included"
    rds_maintenance_window     = "Wed:00:00-Wed:03:00"
    rds_backup_window          = "03:01-06:00"
    rds_log_exports            = [
          "alert",
          "audit",
          "listener",
          "trace"
    ]
    rds_onpremise_access = [
      "10.65.2.0/24",
      "10.65.66.0/24",
      "10.65.130.0/24",
      "192.168.70.0/24",
      "192.168.90.0/24"
    ]
    per_instance_options = [
      {
        option_name = "Timezone"
        option_settings = [
          {
            name  = "TIME_ZONE"
            value = "Europe/London"
          },
        ]
      },
    ]
  },
  fes = {
    instance_class             = "db.m5.large"
    allocated_storage          = 501
    backup_retention_period    = 2
    multi_az                   = false
    engine                     = "oracle-se2"
    major_engine_version       = "19"
    engine_version             = "19"
    auto_minor_version_upgrade = true
    license_model              = "license-included"
    rds_maintenance_window     = "Wed:00:00-Wed:03:00"
    rds_backup_window          = "03:01-06:00"
    rds_log_exports            = [
          "alert",
          "audit",
          "listener",
          "trace"
    ]
    rds_onpremise_access = [
      "192.168.70.0/24",
      "192.168.90.0/24"
    ]
    per_instance_options = [
      {
        option_name = "Timezone"
        option_settings = [
          {
            name  = "TIME_ZONE"
            value = "Europe/London"
          },
        ]
      },
    ]
  }
}

# Parameter group settings
parameter_group_settings = {
  abbyy = [
    {
      name  = "aq_tm_processes"
      value = "6"
    },
    {
      name         = "compatible"
      value        = "19.0.0"
      apply_method = "pending-reboot"
    },
    {
      name  = "db_file_multiblock_read_count"
      value = "64"
    },
    {
      name  = "job_queue_processes"
      value = "1000"
    },
    {
      name  = "nls_length_semantics"
      value = "CHAR"
    },
    {
      name  = "open_cursors"
      value = "3000"
    },
    {
      name  = "parallel_max_servers"
      value = "20"
    },
    {
      name  = "parallel_min_servers"
      value = "10"
    },
    {
      name         = "pga_aggregate_limit"
      value        = "2147483648"
      apply_method = "pending-reboot"
    },
    {
      name         = "processes"
      value        = "4400"
      apply_method = "pending-reboot"
    },
    {
      name  = "remote_dependencies_mode"
      value = "SIGNATURE"
    },
    {
      name         = "sessions"
      value        = "6720"
      apply_method = "pending-reboot"
    },
    {
      name  = "sqlnetora.sqlnet.allowed_logon_version_client"
      value = "10"
    },
    {
      name  = "sqlnetora.sqlnet.allowed_logon_version_server"
      value = "10"
    },
    {
      name         = "timed_statistics"
      value        = "TRUE"
      apply_method = "pending-reboot"
    },
    {
      name  = "undo_retention"
      value = "900"
    },
    {
      name  = "workarea_size_policy"
      value = "AUTO"
    },
  ],
  fes = [
    {
      name  = "aq_tm_processes"
      value = "6"
    },
    {
      name         = "compatible"
      value        = "19.0.0"
      apply_method = "pending-reboot"
    },
    {
      name  = "db_file_multiblock_read_count"
      value = "64"
    },
    {
      name  = "job_queue_processes"
      value = "1000"
    },
    {
      name  = "nls_length_semantics"
      value = "CHAR"
    },
    {
      name  = "open_cursors"
      value = "3000"
    },
    {
      name  = "parallel_max_servers"
      value = "20"
    },
    {
      name  = "parallel_min_servers"
      value = "10"
    },
    {
      name         = "pga_aggregate_limit"
      value        = "2147483648"
      apply_method = "pending-reboot"
    },
    {
      name         = "processes"
      value        = "4400"
      apply_method = "pending-reboot"
    },
    {
      name  = "remote_dependencies_mode"
      value = "SIGNATURE"
    },
    {
      name         = "sessions"
      value        = "6720"
      apply_method = "pending-reboot"
    },
    {
      name  = "sqlnetora.sqlnet.allowed_logon_version_client"
      value = "10"
    },
    {
      name  = "sqlnetora.sqlnet.allowed_logon_version_server"
      value = "10"
    },
    {
      name         = "timed_statistics"
      value        = "TRUE"
      apply_method = "pending-reboot"
    },
    {
      name  = "undo_retention"
      value = "900"
    },
    {
      name  = "workarea_size_policy"
      value = "AUTO"
    },
  ]
}

# Ingress security group patterns
rds_ingress_groups = {
  abbyy = [
    "sgr-fes-app*",
    "sgr-windows-workloads-abbyy*",
    "sgr-windows-workloads-doc-sim*"
  ]
  fes = [
    "sgr-fes-app*",
    "sgr-windows-workloads-abbyy*",
    "sgr-windows-workloads-doc-sim*",
    "sgr-windows-workloads-bus-obj*"
  ]
}

rds_start_stop_schedule = {
  abbyy = {
    rds_schedule_enable = true
    rds_start_schedule = "cron(0 4 * * ? *)"
    rds_stop_schedule = "cron(0 21 * * ? *)"
  },
  fes = {
    rds_schedule_enable = true
    rds_start_schedule = "cron(0 3 * * ? *)"
    rds_stop_schedule = "cron(0 21 * * ? *)"
  }
}

rds_cloudwatch_alarms = {
  abbyy = {
    alarm_actions_enabled = false
    alarm_topic_name = ""
    alarm_topic_name_ooh = ""
  },
  fes = {
    alarm_actions_enabled = false
    alarm_topic_name = ""
    alarm_topic_name_ooh = ""
  }
}
